{"ast":null,"code":"\"use strict\";\n\nvar RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\nexport default function castUnit(v) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"100%\";\n  if (typeof v === 'number') return \"\".concat(v, \"px\");\n  if (typeof v !== 'string') return defaultValue;\n  var text = \"\".concat(v).trim().toLowerCase();\n  if (text === 'auto' || text === 'inherit') return text;\n  if (text.startsWith(\"calc(\")) return text;\n  var m = RX_CSS_UNIT.exec(text);\n  if (!m) return defaultValue;\n  var scalar = parseFloat(m[1]);\n  if (isNaN(scalar) || scalar === 0) return \"0\";\n  var unit = m[2].length < 1 ? \"px\" : m[2];\n  return \"\".concat(scalar).concat(unit);\n}","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/tfw/converter/unit.ts"],"names":["RX_CSS_UNIT","castUnit","v","defaultValue","text","trim","toLowerCase","startsWith","m","exec","scalar","parseFloat","isNaN","unit","length"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAG,+BAApB;AAEA,eAAe,SAASC,QAAT,CAAkBC,CAAlB,EAAyD;AAAA,MAA/BC,YAA+B,uEAAR,MAAQ;AACpE,MAAI,OAAOD,CAAP,KAAa,QAAjB,EAA2B,iBAAUA,CAAV;AAC3B,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOC,YAAP;AAC3B,MAAMC,IAAI,GAAG,UAAGF,CAAH,EAAOG,IAAP,GAAcC,WAAd,EAAb;AACA,MAAIF,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,SAAhC,EAA2C,OAAOA,IAAP;AAC3C,MAAIA,IAAI,CAACG,UAAL,CAAgB,OAAhB,CAAJ,EAA8B,OAAOH,IAAP;AAC9B,MAAMI,CAAC,GAAGR,WAAW,CAACS,IAAZ,CAAiBL,IAAjB,CAAV;AACA,MAAI,CAACI,CAAL,EAAQ,OAAOL,YAAP;AACR,MAAMO,MAAM,GAAGC,UAAU,CAACH,CAAC,CAAC,CAAD,CAAF,CAAzB;AACA,MAAII,KAAK,CAACF,MAAD,CAAL,IAAiBA,MAAM,KAAK,CAAhC,EAAmC,OAAO,GAAP;AACnC,MAAMG,IAAI,GAAGL,CAAC,CAAC,CAAD,CAAD,CAAKM,MAAL,GAAc,CAAd,GAAkB,IAAlB,GAAyBN,CAAC,CAAC,CAAD,CAAvC;AACA,mBAAUE,MAAV,SAAmBG,IAAnB;AACH","sourcesContent":["\"use strict\";\n\nconst RX_CSS_UNIT = /^(-?[.0-9]+)[ \\n\\r]*([a-z%]*)/;\n\nexport default function castUnit(v: any, defaultValue: string = \"100%\") {\n    if (typeof v === 'number') return `${v}px`;\n    if (typeof v !== 'string') return defaultValue;\n    const text = `${v}`.trim().toLowerCase();\n    if (text === 'auto' || text === 'inherit') return text;\n    if (text.startsWith(\"calc(\")) return text;\n    const m = RX_CSS_UNIT.exec(text);\n    if (!m) return defaultValue;\n    const scalar = parseFloat(m[1]);\n    if (isNaN(scalar) || scalar === 0) return \"0\";\n    const unit = m[2].length < 1 ? \"px\" : m[2];\n    return `${scalar}${unit}`;\n}\n"]},"metadata":{},"sourceType":"module"}