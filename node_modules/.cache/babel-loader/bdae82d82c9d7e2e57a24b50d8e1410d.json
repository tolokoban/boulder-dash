{"ast":null,"code":"/**\n * Manage CSS styles.\n */\nexport default {\n  register: registerTheme,\n  apply: applyTheme,\n  bg0: makeGetCurrentColor(\"bg0\"),\n  bg1: makeGetCurrentColor(\"bg1\"),\n  bg2: makeGetCurrentColor(\"bg2\"),\n  bg3: makeGetCurrentColor(\"bg3\"),\n  bgP: makeGetCurrentColor(\"bgP\"),\n  bgPD: makeGetCurrentColor(\"bgPD\"),\n  bgPL: makeGetCurrentColor(\"bgPL\"),\n  bgS: makeGetCurrentColor(\"bgS\"),\n  bgSD: makeGetCurrentColor(\"bgSD\"),\n  bgSL: makeGetCurrentColor(\"bgSL\"),\n  isDark: isDark\n};\n; //################################################################################\n\nimport \"./theme.css\";\nimport Color from \"./color\";\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nvar COLOR = new Color();\nvar THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nvar THEMES = {\n  css: {},\n  vars: {},\n  current: null\n};\n\nfunction registerTheme(themeName, _style) {\n  var style = completeWithDefaultValues(_style);\n  THEMES.vars[themeName] = style;\n  var codeCSS = codeVariables(themeName, style);\n  codeCSS += codeBackground(themeName, style);\n  codeCSS += codeElevation(themeName, style);\n  codeCSS += codeText(themeName, style);\n  var styleElement = THEMES.css[themeName];\n\n  if (!styleElement) {\n    styleElement = document.createElement(\"style\");\n    document.getElementsByTagName('head')[0].appendChild(styleElement);\n    THEMES.css[themeName] = styleElement;\n  }\n\n  styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName, style) {\n  var codeCSS = '';\n\n  var _loop = function _loop(depth) {\n    THEME_COLOR_NAMES.forEach(function (colorName) {\n      var fgColorName = \"fg\".concat(colorName);\n      var bgColorName = \"bg\".concat(colorName);\n      var styleFgColorName = style[fgColorName];\n      var styleBgColorName = style[bgColorName];\n      var bgClass = \".thm-bg\" + colorName;\n      var fgClass = \".thm-fg\" + colorName;\n\n      for (var position = 1; position <= depth; position++) {\n        var piecesFG = [];\n        var piecesSVG = [];\n        var piecesBG = [];\n\n        for (var index = 1; index <= depth; index++) {\n          piecesBG.push(position === index ? bgClass : '*');\n          piecesSVG.push(position === index ? bgClass : '*');\n          piecesFG.push(position === index ? fgClass : '*');\n\n          if (index === depth) {\n            piecesBG.push(piecesBG.pop() + \".thm-fg\");\n            piecesFG.push(piecesFG.pop() + fgClass);\n          }\n        }\n\n        codeCSS += \"body.dom-theme-\" + themeName + \" \" + piecesBG.join(\" > \") + \" { color: \" + styleFgColorName + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" \" + removeTail(piecesBG.join(\" > \"), \".thm-fg\") + \" { color: \" + styleFgColorName + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" \" + piecesFG.join(\" > \") + \" { color: \" + styleBgColorName + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" \" + piecesSVG.join(\" > \") + \" .thm-svg-fill0\" + \" { fill: \" + styleFgColorName + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" \" + piecesSVG.join(\" > \") + \" .thm-svg-stroke0\" + \" { stroke: \" + styleFgColorName + \" }\\n\";\n      }\n    });\n  };\n\n  for (var depth = 1; depth <= 10; depth++) {\n    _loop(depth);\n  }\n\n  return codeCSS;\n}\n\nfunction codeVariables(themeName, style) {\n  var codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n  THEME_COLOR_NAMES.forEach(function (colorName) {\n    var s = style[\"bg\".concat(colorName)];\n    codeCSS += \"  --thm-bg\".concat(colorName, \": \").concat(s, \";\\n\");\n    COLOR.parse(s);\n    var pen = COLOR.luminanceStep() ? style.black : style.white;\n    codeCSS += \"  --thm-fg\".concat(colorName, \": \").concat(pen, \";\\n\");\n  });\n  codeCSS += \"  --thm-white: \".concat(style.white, \";\\n\");\n  codeCSS += \"  --thm-black: \".concat(style.black, \";\\n\");\n  codeCSS += \"}\\n\";\n  return codeCSS;\n}\n\nfunction codeBackground(themeName, style) {\n  var codeCSS = '';\n  THEME_COLOR_NAMES.forEach(function (colorName) {\n    codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName + \" { background-color: \" + style[\"bg\".concat(colorName)] + \" }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName + \" { color: \" + style[\"fg\".concat(colorName)] + \" }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \" { background-color: \" + style[\"bg\".concat(colorName)] + \" }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\" + \" { background: linear-gradient(to top,\" + style[\"bg\".concat(colorName)] + \",transparent) }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\" + \" { background: linear-gradient(to bottom,\" + style[\"bg\".concat(colorName)] + \",transparent) }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\" + \" { background: linear-gradient(to right,\" + style[\"bg\".concat(colorName)] + \",transparent) }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\" + \" { background: linear-gradient(to left,\" + style[\"bg\".concat(colorName)] + \",transparent) }\\n\";\n    if (!isNaN(parseInt(colorName))) return;\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName + \" { fill: \" + style[\"bg\".concat(colorName)] + \" }\\n\";\n    codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName + \" { stroke: \" + style[\"bg\".concat(colorName)] + \" }\\n\";\n  });\n  return codeCSS;\n}\n\nvar ELEVATIONS = {\n  \"0\": [\"none\"],\n  \"2\": [\"button\", \"card\"],\n  \"4\": [\"bar\"],\n  \"6\": [\"floating\"],\n  \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n  \"9\": [\"sunmenu-0\"],\n  \"10\": [\"sunmenu-1\"],\n  \"11\": [\"sunmenu-2\"],\n  \"12\": [\"floating:active\"],\n  \"16\": [\"nav\"],\n  \"24\": [\"dialog\"]\n};\n\nfunction codeElevation(themeName, style) {\n  COLOR.parse(style.bg2);\n  var luminance = COLOR.luminance();\n  var elevationColor = luminance < .6 ? addAlpha(style.white, 4) : addAlpha(style.black, 6);\n  var codeCSS = '';\n  var elevationKeys = Object.keys(ELEVATIONS);\n  elevationKeys.forEach(function (elevationKey) {\n    var elevation = parseInt(elevationKey, 10);\n    ELEVATIONS[elevationKey].forEach(function (name) {\n      codeCSS += \"body.dom-theme-\".concat(themeName, \" .thm-ele-\").concat(name, \" {\\n  box-shadow: 0 \").concat(elevation, \"px \").concat(2 * elevation, \"px \").concat(elevationColor, \"\\n}\\n\");\n    });\n  });\n  return codeCSS;\n}\n\nfunction applyTheme(name) {\n  var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;\n\n  if (!THEMES.css[name]) {\n    console.error(\"This theme has not been registered: \", name);\n    return;\n  }\n\n  var body = document.body;\n\n  if (typeof THEMES.current === 'string') {\n    body.classList.remove(\"dom-theme-\".concat(THEMES.current));\n  }\n\n  THEMES.current = name;\n  body.classList.add(\"dom-theme-\".concat(THEMES.current));\n}\n\nfunction completeBackgrounds(style) {\n  var has0 = typeof style.bg0 === 'string';\n  var has1 = typeof style.bg1 === 'string';\n  var has2 = typeof style.bg2 === 'string';\n  var has3 = typeof style.bg3 === 'string';\n  if (has0 && has1 && has2 && has3) return;\n\n  if (!has0 && !has1 && !has2 && !has3) {\n    style.bg0 = \"#E0E0E0\";\n    style.bg1 = \"#F5F5F5\";\n    style.bg2 = \"#FAFAFA\";\n    style.bg3 = \"#FFF\";\n    return;\n  }\n\n  if (has0 && !has1 && !has2 && !has3) {\n    style.bg3 = lightenBackground(style.bg0);\n    has3 = true;\n  }\n\n  if (!has0 && !has1 && !has2 && has3) {\n    style.bg0 = darkenBackground(style.bg3);\n    has3 = true;\n  }\n\n  var color0 = new Color(style.bg0);\n  var r0 = color0.R;\n  var g0 = color0.G;\n  var b0 = color0.B;\n  var color3 = new Color(style.bg3);\n  var r3 = color3.R;\n  var g3 = color3.G;\n  var b3 = color3.B;\n  var color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n  var color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n  style.bg1 = color1.stringify();\n  style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style) {\n  if (typeof style === 'undefined') style = {};\n  completeBackgrounds(style);\n  if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n  if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n  if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n  if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n  if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n  if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n  if (typeof style.white !== 'string') style.white = '#fff';\n  if (typeof style.black !== 'string') style.black = '#000';\n  THEME_COLOR_NAMES.forEach(function (name) {\n    var bg = style[\"bg\".concat(name)] || '#000';\n    COLOR.parse(bg);\n    var luminance = COLOR.luminance();\n    style[\"fg\".concat(name)] = luminance < .6 ? style.white : style.black;\n  });\n  return style;\n}\n\nfunction dark(color) {\n  var percent = .25;\n  COLOR.parse(color);\n  COLOR.rgb2hsl();\n  COLOR.L *= 1 - percent;\n  COLOR.hsl2rgb();\n  return COLOR.stringify();\n}\n\nfunction darkenBackground(color) {\n  COLOR.parse(color);\n  COLOR.rgb2hsl();\n  COLOR.L = Math.max(0, COLOR.L - 0.15);\n  COLOR.hsl2rgb();\n  return COLOR.stringify();\n}\n\nfunction light(color) {\n  var percent = .4;\n  COLOR.parse(color);\n  COLOR.rgb2hsl();\n  COLOR.L = percent + (1 - percent) * COLOR.L;\n  COLOR.hsl2rgb();\n  return COLOR.stringify();\n}\n\nfunction lightenBackground(color) {\n  COLOR.parse(color);\n  COLOR.rgb2hsl();\n  COLOR.L = Math.min(1, COLOR.L + 0.3);\n  COLOR.hsl2rgb();\n  return COLOR.stringify();\n}\n\nfunction rotateHue(color) {\n  COLOR.parse(color);\n  COLOR.rgb2hsl();\n  COLOR.H = COLOR.H + .5;\n  if (COLOR.H > 1) COLOR.H--;\n  COLOR.hsl2rgb();\n  return COLOR.stringify();\n}\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\n\n\nfunction addAlpha(color, alpha) {\n  if (color.length < 5) return color + alpha;\n  return color + alpha + alpha;\n}\n\nfunction removeTail(text, tail) {\n  return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark() {\n  var colorName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  if (colorName === \"\") return isThemeGloballyDark();\n  var vars = THEMES.vars[THEMES.current || \"default\"];\n  var varName = \"$isDark/\".concat(colorName);\n  var isDark = vars[varName];\n  if (typeof isDark === 'boolean') return isDark;\n  var color = new Color(vars[colorName]);\n  vars[varName] = !color.luminanceStep();\n  return vars[varName];\n}\n\nfunction isThemeGloballyDark() {\n  var vars = THEMES.vars[THEMES.current || \"default\"];\n  var isDark = vars.$isDark;\n  if (typeof isDark === 'boolean') return isDark;\n  var bg0 = new Color(vars.bg0);\n  var bg1 = new Color(vars.bg1);\n  var bg2 = new Color(vars.bg2);\n  var bg3 = new Color(vars.bg3);\n  var average = Color.mix(Color.mix(bg0, bg1), Color.mix(bg2, bg3));\n  vars.$isDark = !average.luminanceStep();\n  return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName) {\n  return function () {\n    return THEMES.vars[THEMES.current || \"default\"][colorName];\n  };\n}\n\nregisterTheme(\"default\", {\n  bgP: \"#1e90ff\"\n});","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/tfw/theme.ts"],"names":["register","registerTheme","apply","applyTheme","bg0","makeGetCurrentColor","bg1","bg2","bg3","bgP","bgPD","bgPL","bgS","bgSD","bgSL","isDark","Color","COLOR","THEME_COLOR_NAMES","THEMES","css","vars","current","themeName","_style","style","completeWithDefaultValues","codeCSS","codeVariables","codeBackground","codeElevation","codeText","styleElement","document","createElement","getElementsByTagName","appendChild","textContent","depth","forEach","colorName","fgColorName","bgColorName","styleFgColorName","styleBgColorName","bgClass","fgClass","position","piecesFG","piecesSVG","piecesBG","index","push","pop","join","removeTail","s","parse","pen","luminanceStep","black","white","isNaN","parseInt","ELEVATIONS","luminance","elevationColor","addAlpha","elevationKeys","Object","keys","elevationKey","elevation","name","target","body","console","error","classList","remove","add","completeBackgrounds","has0","has1","has2","has3","lightenBackground","darkenBackground","color0","r0","R","g0","G","b0","B","color3","r3","g3","b3","color1","newRGB","color2","stringify","dark","light","rotateHue","bg","color","percent","rgb2hsl","L","hsl2rgb","Math","max","min","H","alpha","length","text","tail","substr","isThemeGloballyDark","varName","$isDark","average","mix"],"mappings":"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","sourcesContent":["/**\n * Manage CSS styles.\n */\nexport default {\n    register: registerTheme,\n    apply: applyTheme,\n    bg0: makeGetCurrentColor(\"bg0\"),\n    bg1: makeGetCurrentColor(\"bg1\"),\n    bg2: makeGetCurrentColor(\"bg2\"),\n    bg3: makeGetCurrentColor(\"bg3\"),\n    bgP: makeGetCurrentColor(\"bgP\"),\n    bgPD: makeGetCurrentColor(\"bgPD\"),\n    bgPL: makeGetCurrentColor(\"bgPL\"),\n    bgS: makeGetCurrentColor(\"bgS\"),\n    bgSD: makeGetCurrentColor(\"bgSD\"),\n    bgSL: makeGetCurrentColor(\"bgSL\"),\n    isDark\n};\n\ninterface IStyle {\n    bg0?: string;\n    bg1?: string;\n    bg2?: string;\n    bg3?: string;\n    bgP?: string;\n    bgPD?: string;\n    bgPL?: string;\n    bgS?: string;\n    bgSD?: string;\n    bgSL?: string;\n    fg0?: string;\n    fg1?: string;\n    fg2?: string;\n    fg3?: string;\n    fgP?: string;\n    fgPD?: string;\n    fgPL?: string;\n    fgS?: string;\n    fgSD?: string;\n    fgSL?: string;\n    black?: string;\n    white?: string;\n    [key: string]: string | undefined;\n};\n\n\n//################################################################################\n\nimport \"./theme.css\"\nimport Color from \"./color\"\n\ninterface IThemes {\n    css: { [name: string]: HTMLStyleElement };\n    vars: { [name: string]: IStyle }\n    current: string | null;\n}\n\n// Used for luminance computations. Because we need to know which text color\n// can be used based on the background's luminance.\nconst COLOR = new Color();\n\nconst THEME_COLOR_NAMES = [\"0\", \"1\", \"2\", \"3\", \"P\", \"PD\", \"PL\", \"S\", \"SD\", \"SL\"];\nconst THEMES: IThemes = {\n    css: {},\n    vars: {},\n    current: null\n};\n\nfunction registerTheme(themeName: string, _style: IStyle) {\n    const style = completeWithDefaultValues(_style);\n    THEMES.vars[themeName] = style;\n\n    let codeCSS = codeVariables(themeName, style);\n    codeCSS += codeBackground(themeName, style);\n    codeCSS += codeElevation(themeName, style);\n    codeCSS += codeText(themeName, style);\n\n    let styleElement = THEMES.css[themeName];\n    if (!styleElement) {\n        styleElement = document.createElement(\"style\");\n        document.getElementsByTagName('head')[0].appendChild(styleElement);\n        THEMES.css[themeName] = styleElement;\n    }\n\n    styleElement.textContent = codeCSS;\n}\n\nfunction codeText(themeName: string, style: IStyle) {\n    let codeCSS = '';\n    for (let depth = 1; depth <= 10; depth++) {\n        THEME_COLOR_NAMES.forEach(function(colorName) {\n            const fgColorName = `fg${colorName}`;\n            const bgColorName = `bg${colorName}`;\n            const styleFgColorName: string = style[fgColorName] as string;\n            const styleBgColorName: string = style[bgColorName] as string;\n            const bgClass = \".thm-bg\" + colorName;\n            const fgClass = \".thm-fg\" + colorName;\n            for (let position = 1; position <= depth; position++) {\n                const piecesFG = [];\n                const piecesSVG = [];\n                const piecesBG = [];\n                for (let index = 1; index <= depth; index++) {\n                    piecesBG.push(position === index ? bgClass : '*');\n                    piecesSVG.push(position === index ? bgClass : '*');\n                    piecesFG.push(position === index ? fgClass : '*');\n                    if (index === depth) {\n                        piecesBG.push(piecesBG.pop() + \".thm-fg\");\n                        piecesFG.push(piecesFG.pop() + fgClass);\n                    }\n                }\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesBG.join(\" > \")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + removeTail(piecesBG.join(\" > \"), \".thm-fg\")\n                    + \" { color: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesFG.join(\" > \")\n                    + \" { color: \" + styleBgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-fill0\"\n                    + \" { fill: \" + styleFgColorName + \" }\\n\";\n                codeCSS += \"body.dom-theme-\" + themeName + \" \"\n                    + piecesSVG.join(\" > \")\n                    + \" .thm-svg-stroke0\"\n                    + \" { stroke: \" + styleFgColorName + \" }\\n\";\n            }\n        });\n    }\n    return codeCSS;\n}\n\nfunction codeVariables(themeName: string, style: IStyle) {\n    let codeCSS = \"body.dom-theme-\" + themeName + '{\\n';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        const s = style[`bg${colorName}`] as string;\n        codeCSS += `  --thm-bg${colorName}: ${s};\\n`;\n        COLOR.parse(s);\n        const pen = COLOR.luminanceStep() ? style.black : style.white;\n        codeCSS += `  --thm-fg${colorName}: ${pen};\\n`;\n    });\n    codeCSS += `  --thm-white: ${style.white};\\n`;\n    codeCSS += `  --thm-black: ${style.black};\\n`;\n    codeCSS += \"}\\n\";\n    return codeCSS;\n}\n\n\nfunction codeBackground(themeName: string, style: IStyle) {\n    var codeCSS = '';\n    THEME_COLOR_NAMES.forEach(function(colorName) {\n        codeCSS += \"body.dom-theme-\" + themeName + \".thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-fg\" + colorName\n            + \" { color: \" + style[`fg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName\n            + \" { background-color: \" + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-bottom\"\n            + \" { background: linear-gradient(to top,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-top\"\n            + \" { background: linear-gradient(to bottom,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-left\"\n            + \" { background: linear-gradient(to right,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-bg\" + colorName + \"-right\"\n            + \" { background: linear-gradient(to left,\"\n            + style[`bg${colorName}`] + \",transparent) }\\n\";\n\n        if (!isNaN(parseInt(colorName))) return;\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-fill\" + colorName\n            + \" { fill: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n        codeCSS += \"body.dom-theme-\" + themeName + \" .thm-svg-stroke\" + colorName\n            + \" { stroke: \"\n            + style[`bg${colorName}`] + \" }\\n\";\n    });\n    return codeCSS;\n}\n\nconst ELEVATIONS: { [ele: string]: string[] } = {\n    \"0\": [\"none\"],\n    \"2\": [\"button\", \"card\"],\n    \"4\": [\"bar\"],\n    \"6\": [\"floating\"],\n    \"8\": [\"button:active\", \"button-raised\", \"card-raised\"],\n    \"9\": [\"sunmenu-0\"],\n    \"10\": [\"sunmenu-1\"],\n    \"11\": [\"sunmenu-2\"],\n    \"12\": [\"floating:active\"],\n    \"16\": [\"nav\"],\n    \"24\": [\"dialog\"]\n};\nfunction codeElevation(themeName: string, style: IStyle) {\n    COLOR.parse(style.bg2);\n    const luminance = COLOR.luminance();\n    var elevationColor = luminance < .6\n        ? addAlpha(style.white, 4)\n        : addAlpha(style.black, 6);\n    var codeCSS = '';\n    const elevationKeys = Object.keys(ELEVATIONS);\n    elevationKeys.forEach(function(elevationKey) {\n        const elevation = parseInt(elevationKey, 10);\n        ELEVATIONS[elevationKey].forEach(name => {\n            codeCSS += `body.dom-theme-${themeName} .thm-ele-${name} {\n  box-shadow: 0 ${elevation}px ${2 * elevation}px ${elevationColor}\n}\\n`;\n        })\n    });\n    return codeCSS;\n}\n\nfunction applyTheme(name: string, target: HTMLElement = document.body) {\n    if (!THEMES.css[name]) {\n        console.error(\"This theme has not been registered: \", name);\n        return;\n    }\n    var body = document.body;\n    if (typeof THEMES.current === 'string') {\n        body.classList.remove(`dom-theme-${THEMES.current}`);\n    }\n    THEMES.current = name;\n    body.classList.add(`dom-theme-${THEMES.current}`);\n}\n\nfunction completeBackgrounds(style: IStyle) {\n    let has0 = typeof style.bg0 === 'string';\n    const has1 = typeof style.bg1 === 'string';\n    const has2 = typeof style.bg2 === 'string';\n    let has3 = typeof style.bg3 === 'string';\n\n    if (has0 && has1 && has2 && has3) return\n\n    if (!has0 && !has1 && !has2 && !has3) {\n        style.bg0 = \"#E0E0E0\";\n        style.bg1 = \"#F5F5F5\";\n        style.bg2 = \"#FAFAFA\";\n        style.bg3 = \"#FFF\";\n        return;\n    }\n    if (has0 && !has1 && !has2 && !has3) {\n        style.bg3 = lightenBackground(style.bg0 as string);\n        has3 = true;\n    }\n    if (!has0 && !has1 && !has2 && has3) {\n        style.bg0 = darkenBackground(style.bg3 as string);\n        has3 = true;\n    }\n    const color0 = new Color(style.bg0);\n    const r0 = color0.R;\n    const g0 = color0.G;\n    const b0 = color0.B;\n    const color3 = new Color(style.bg3);\n    const r3 = color3.R;\n    const g3 = color3.G;\n    const b3 = color3.B;\n    const color1 = Color.newRGB((2 * r0 + r3) / 3, (2 * g0 + g3) / 3, (2 * b0 + b3) / 3);\n    const color2 = Color.newRGB((r0 + 2 * r3) / 3, (g0 + 2 * g3) / 3, (b0 + 2 * b3) / 3);\n    style.bg1 = color1.stringify();\n    style.bg2 = color2.stringify();\n}\n\nfunction completeWithDefaultValues(style: IStyle) {\n    if (typeof style === 'undefined') style = {};\n\n    completeBackgrounds(style);\n\n    if (typeof style.bgP !== 'string') style.bgP = \"#3E50B4\";\n    if (typeof style.bgPD !== 'string') style.bgPD = dark(style.bgP);\n    if (typeof style.bgPL !== 'string') style.bgPL = light(style.bgP);\n    if (typeof style.bgS !== 'string') style.bgS = rotateHue(style.bgP);\n    if (typeof style.bgSD !== 'string') style.bgSD = dark(style.bgS);\n    if (typeof style.bgSL !== 'string') style.bgSL = light(style.bgS);\n\n    if (typeof style.white !== 'string') style.white = '#fff';\n    if (typeof style.black !== 'string') style.black = '#000';\n\n    THEME_COLOR_NAMES.forEach(function(name) {\n        const bg: string = style[`bg${name}`] || '#000';\n        COLOR.parse(bg);\n        var luminance = COLOR.luminance();\n        style[`fg${name}`] = luminance < .6 ? style.white : style.black;\n    });\n\n    return style;\n}\n\nfunction dark(color: string) {\n    const percent = .25;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L *= 1 - percent;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction darkenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.max(0, COLOR.L - 0.15);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction light(color: string) {\n    var percent = .4;\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = percent + (1 - percent) * COLOR.L;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction lightenBackground(color: string) {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.L = Math.min(1, COLOR.L + 0.3);\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\nfunction rotateHue(color: string): string {\n    COLOR.parse(color);\n    COLOR.rgb2hsl();\n    COLOR.H = COLOR.H + .5;\n    if (COLOR.H > 1) COLOR.H--;\n    COLOR.hsl2rgb();\n    return COLOR.stringify();\n}\n\n/**\n * @param {string} color - RGB color in format #xxx or #xxxxxx.\n * @param {string} alpha - Single char between 0 and F.\n */\nfunction addAlpha(color: string, alpha: string) {\n    if (color.length < 5) return color + alpha;\n    return color + alpha + alpha;\n}\n\nfunction removeTail(text: string, tail: string) {\n    return text.substr(0, text.length - tail.length);\n}\n\nfunction isDark(colorName: string = \"\"): boolean {\n    if (colorName === \"\") return isThemeGloballyDark();\n\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    const varName = `$isDark/${colorName}`;\n    let isDark = vars[varName];\n    if (typeof isDark === 'boolean') return isDark;\n\n    const color = new Color(vars[colorName]);\n    vars[varName] = !color.luminanceStep();\n    return vars[varName];\n}\n\nfunction isThemeGloballyDark(): boolean {\n    const vars = THEMES.vars[THEMES.current || \"default\"];\n    let isDark = vars.$isDark;\n    if (typeof isDark === 'boolean') return isDark;\n\n    const bg0 = new Color(vars.bg0);\n    const bg1 = new Color(vars.bg1);\n    const bg2 = new Color(vars.bg2);\n    const bg3 = new Color(vars.bg3);\n    const average = Color.mix(\n        Color.mix(bg0, bg1),\n        Color.mix(bg2, bg3)\n    );\n    vars.$isDark = !average.luminanceStep();\n    return vars.$isDark;\n}\n\nfunction makeGetCurrentColor(colorName: string) : ()=>string {\n    return () => THEMES.vars[THEMES.current || \"default\"][colorName];\n}\n\nregisterTheme(\"default\", { bgP: \"#1e90ff\" });\n"]},"metadata":{},"sourceType":"module"}