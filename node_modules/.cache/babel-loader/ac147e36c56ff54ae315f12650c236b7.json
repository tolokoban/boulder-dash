{"ast":null,"code":"import _classCallCheck from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/tolokoban/Code/github/boulder-dash/src/tfw/view/button.tsx\";\nimport * as React from \"react\";\nimport Icon from \"./icon\";\nimport \"./button.css\";\nimport Touchable from \"../behavior/touchable\";\nimport castArray from \"../converter/array\";\nimport castString from \"../converter/string\";\nimport castBoolean from \"../converter/boolean\";\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Button).call(this, props));\n    _this.touchable = void 0;\n    _this.ref = void 0;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.touchable = new Touchable({\n      onTap: _this.handleClick\n    });\n    _this.ref = React.createRef();\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var element = this.ref.current;\n      if (!element) return;\n      this.touchable.element = element;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var slot = this.props.onClick;\n      if (typeof slot !== 'function') return;\n      slot(this.props.tag);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var p = this.props,\n          label = castString(p.label, \"\"),\n          icon = castString(p.icon, \"\"),\n          wide = castBoolean(p.wide, false),\n          wait = castBoolean(p.wait, false),\n          flat = castBoolean(p.flat, false),\n          small = castBoolean(p.small, false),\n          enabled = !wait && castBoolean(p.enabled, true),\n          warning = castBoolean(p.warning, false),\n          classes = [\"tfw-view-button\"].concat(castArray(p.classes));\n      if (wide) classes.push(\"wide\");\n\n      if (flat) {\n        classes.push(\"flat\");\n        classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\n      } else {\n        if (enabled) classes.push(\"thm-ele-button\");\n        classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\n      }\n\n      if (small) classes.push(\"small\");\n      if (label.length === 0) classes.push(\"floating\");\n      this.touchable.enabled = enabled;\n      return React.createElement(\"button\", {\n        ref: this.ref,\n        className: classes.join(\" \"),\n        disabled: !enabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, icon.length > 0 ? React.createElement(Icon, {\n        content: icon,\n        animate: wait,\n        size: \"\".concat(small ? 20 : 28, \"px\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : null, label.length > 0 ? React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" \", label, \" \") : null);\n    }\n  }]);\n\n  return Button;\n}(React.Component);\n\nexport { Button as default };","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/tfw/view/button.tsx"],"names":["React","Icon","Touchable","castArray","castString","castBoolean","Button","props","touchable","ref","handleClick","bind","onTap","createRef","element","current","slot","onClick","tag","p","label","icon","wide","wait","flat","small","enabled","warning","classes","concat","push","length","join","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport Icon from \"./icon\"\nimport \"./button.css\"\nimport Touchable from \"../behavior/touchable\"\nimport castArray from \"../converter/array\"\nimport castString from \"../converter/string\"\nimport castBoolean from \"../converter/boolean\"\n\ninterface IButtonProps {\n    label?: string;\n    icon?: string;\n    wide?: boolean;\n    wait?: boolean;\n    flat?: boolean;\n    small?: boolean;\n    warning?: boolean;\n    enabled?: boolean;\n    classes?: string[] | string;\n    tag?: any;\n    onClick?: (tag: any) => void;\n}\n\nexport default class Button extends React.Component<IButtonProps, {}> {\n    readonly touchable: Touchable;\n    readonly ref: React.RefObject<HTMLButtonElement>;\n\n    constructor(props: IButtonProps) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.touchable = new Touchable({ onTap: this.handleClick });\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        const element = this.ref.current;\n        if (!element) return;\n        this.touchable.element = element;\n    }\n\n    handleClick() {\n        const slot = this.props.onClick;\n        if (typeof slot !== 'function') return;\n        slot(this.props.tag);\n    }\n\n    render() {\n        const p = this.props,\n            label = castString(p.label, \"\"),\n            icon = castString(p.icon, \"\"),\n            wide = castBoolean(p.wide, false),\n            wait = castBoolean(p.wait, false),\n            flat = castBoolean(p.flat, false),\n            small = castBoolean(p.small, false),\n            enabled = !wait && castBoolean(p.enabled, true),\n            warning = castBoolean(p.warning, false),\n            classes = [\"tfw-view-button\"].concat(castArray(p.classes));\n        if (wide) classes.push(\"wide\");\n        if (flat) {\n            classes.push(\"flat\");\n            classes.push(warning ? \"thm-fgS\" : \"thm-fgP\");\n        }\n        else {\n            if (enabled) classes.push(\"thm-ele-button\");\n            classes.push(warning ? \"thm-bgS\" : \"thm-bgP\");\n        }\n        if (small) classes.push(\"small\");\n        if (label.length === 0) classes.push(\"floating\");\n\n        this.touchable.enabled = enabled;\n        return (\n            <button ref={this.ref}\n                className={classes.join(\" \")}\n                disabled={!enabled}>\n                {icon.length > 0\n                    ? <Icon content={icon}\n                        animate={wait}\n                        size={`${small ? 20 : 28}px`} />\n                    : null}\n                {label.length > 0\n                    ? <div className=\"text\" > {label} </div>\n                    : null}\n            </button>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}