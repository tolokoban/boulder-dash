{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tolokoban/Code/github/boulder-dash/src/tfw/view/icon.tsx\";\nimport * as React from \"react\";\nimport castBoolean from \"../converter/boolean\";\nimport castInteger from \"../converter/integer\";\nimport castUnit from \"../converter/unit\";\nimport { iconsBook } from \"../icons\";\nimport \"./icon.css\";\nvar EnumPenColor;\n\n(function (EnumPenColor) {\n  EnumPenColor[EnumPenColor[\"B\"] = 0] = \"B\";\n  EnumPenColor[EnumPenColor[\"F\"] = 1] = \"F\";\n  EnumPenColor[EnumPenColor[\"P\"] = 2] = \"P\";\n  EnumPenColor[EnumPenColor[\"PD\"] = 3] = \"PD\";\n  EnumPenColor[EnumPenColor[\"PL\"] = 4] = \"PL\";\n  EnumPenColor[EnumPenColor[\"S\"] = 5] = \"S\";\n  EnumPenColor[EnumPenColor[\"SD\"] = 6] = \"SD\";\n  EnumPenColor[EnumPenColor[\"SL\"] = 7] = \"SL\";\n})(EnumPenColor || (EnumPenColor = {}));\n\nvar Icon =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Icon, _React$Component);\n\n  _createClass(Icon, null, [{\n    key: \"isValidIconName\",\n    value: function isValidIconName(name) {\n      return typeof iconsBook[name] !== 'undefined';\n    }\n  }, {\n    key: \"getAllIconNames\",\n    value: function getAllIconNames() {\n      return Object.keys(iconsBook).sort();\n    }\n  }]);\n\n  function Icon(props) {\n    var _this;\n\n    _classCallCheck(this, Icon);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icon).call(this, props));\n    _this.refIcon = void 0;\n    _this.visible = void 0;\n    _this.timeoutHandle = void 0;\n    _this.refIcon = React.createRef();\n    _this.visible = false;\n    _this.timeoutHandle = 0;\n    return _this;\n  }\n\n  _createClass(Icon, [{\n    key: \"triggerVisibleAnimation\",\n    value: function triggerVisibleAnimation() {\n      var _this2 = this;\n\n      var elemIcon = this.refIcon.current,\n          visible = this.visible;\n\n      if (this.timeoutHandle) {\n        window.clearTimeout(this.timeoutHandle);\n        this.timeoutHandle = 0;\n      }\n\n      requestAnimationFrame(function () {\n        if (visible) elemIcon.classList.remove(\"zero\");else {\n          elemIcon.classList.add(\"zero\");\n          var slot = _this2.props.onHide;\n\n          if (typeof slot === 'function') {\n            _this2.timeoutHandle = window.setTimeout(slot, 300);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var p = this.props,\n          visible = castBoolean(p.visible, true),\n          animate = castBoolean(p.animate, false),\n          flipH = castBoolean(p.flipH, false),\n          flipV = castBoolean(p.flipV, false),\n          size = castUnit(p.size, \"28px\"),\n          content = castContent(p.content),\n          rotate = castInteger(p.rotate, 0),\n          onClick = p.onClick,\n          classes = [\"tfw-view-icon\"];\n      var svgContent = createSvgContent(content, p);\n      if (!svgContent) return null;\n      if (animate) classes.push(\"animate\");\n      if (visible) classes.push(\"zero\");\n      if (typeof onClick === 'function') classes.push(\"active\");\n      var transform = \"\";\n\n      if (rotate !== 0) {\n        transform += \"rotate(\".concat(rotate, \"deg) \");\n      }\n\n      if (flipH || flipV) {\n        transform += \"scale(\".concat(flipH ? -1 : 1, \",\").concat(flipV ? -1 : 1, \")\");\n      }\n\n      var style = {\n        width: size,\n        height: size\n      };\n      if (transform.length > 0) style.transform = transform;\n      requestAnimationFrame(function () {\n        return _this3.triggerVisibleAnimation();\n      });\n      this.visible = visible;\n      return React.createElement(\"svg\", {\n        className: classes.join(\" \"),\n        ref: this.refIcon,\n        viewBox: \"-65 -65 130 130\",\n        preserveAspectRatio: \"xMidYMid\",\n        width: size,\n        height: size,\n        onClick: onClick,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, svgContent, React.createElement(\"g\", {\n        strokeWidth: \"6\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, createSvgContent(content, p)));\n    }\n  }]);\n\n  return Icon;\n}(React.Component);\n\nexport { Icon as default };\n\nfunction createSvgContent(def, props) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  var elementName = def[0],\n      _parseDef = parseDef(def),\n      attributes = _parseDef.attributes,\n      children = _parseDef.children;\n\n  if (typeof elementName === 'undefined') return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  });\n  var attribs = manageColors(attributes);\n  if (key.length > 0) attributes.key = key;\n  return React.createElement(elementName, attribs, children.map(function (child, index) {\n    return createSvgContent(child, props, \"\".concat(index));\n  }));\n}\n\nvar CLASSES = [\"0\", \"1\", \"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\n/**\n * If the value of the attribute \"fill\" is an element of CLASSES,\n * it will be removed and replace with a class.\n * Same thing for the attibute \"stroke\".\n *\n * @example\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\n *\n * @param   attribs [description]\n * @param   props   [description]\n * @returns         [description]\n */\n\nfunction manageColors(attribs) {\n  // @TODO For special forms of \"fill\" and \"stroke\", add classes.\n  var classes = (attribs.className || \"\").split(\" \");\n  [\"fill\", \"stroke\"].forEach(function (attribName) {\n    var attribValue = attribs[attribName];\n    if (typeof attribValue === 'undefined') return;\n    var key = \"\".concat(attribValue).toUpperCase();\n    if (CLASSES.indexOf(key) === -1) return;\n    delete attribs[attribName];\n    classes.push(\"thm-svg-\".concat(attribName).concat(key));\n  });\n  attribs.className = classes.join(\" \").trim();\n  return attribs;\n}\n\nfunction parseDef(_ref) {\n  var _ref2 = _slicedToArray(_ref, 3),\n      name = _ref2[0],\n      arg1 = _ref2[1],\n      arg2 = _ref2[2];\n\n  var attributes, children;\n  if (Array.isArray(arg1)) children = arg1;else if (typeof arg1 !== 'undefined') attributes = arg1;\n  if (Array.isArray(arg2)) children = arg2;else if (typeof arg2 !== 'undefined') attributes = arg2;\n  if (typeof attributes === 'undefined') attributes = {};\n  if (typeof children === 'undefined') children = [];\n  return {\n    attributes: attributes,\n    children: children\n  };\n}\n\nfunction castContent() {\n  var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ok\";\n  if (Array.isArray(content)) return content;\n  return iconsBook[content] || [];\n}","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/tfw/view/icon.tsx"],"names":["React","castBoolean","castInteger","castUnit","iconsBook","EnumPenColor","Icon","name","Object","keys","sort","props","refIcon","visible","timeoutHandle","createRef","elemIcon","current","window","clearTimeout","requestAnimationFrame","classList","remove","add","slot","onHide","setTimeout","p","animate","flipH","flipV","size","content","castContent","rotate","onClick","classes","svgContent","createSvgContent","push","transform","style","width","height","length","triggerVisibleAnimation","join","Component","def","key","elementName","parseDef","attributes","children","attribs","manageColors","createElement","map","child","index","CLASSES","className","split","forEach","attribName","attribValue","toUpperCase","indexOf","trim","arg1","arg2","Array","isArray"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport * as React from \"react\";\nimport castBoolean from \"../converter/boolean\";\nimport castInteger from \"../converter/integer\";\nimport castUnit from \"../converter/unit\";\nimport { iconsBook, TIconDefinition } from \"../icons\";\nimport \"./icon.css\";\n\nenum EnumPenColor { B, F, P, PD, PL, S, SD, SL }\n\ninterface IIconProps {\n    visible?: boolean;\n    content?: string | TIconDefinition;\n    size?: string | number;\n    animate?: boolean;\n    flipH?: boolean;\n    flipV?: boolean;\n    rotate?: number;\n    pen0?: EnumPenColor;\n    pen1?: EnumPenColor;\n    pen2?: EnumPenColor;\n    pen3?: EnumPenColor;\n    pen4?: EnumPenColor;\n    pen5?: EnumPenColor;\n    pen6?: EnumPenColor;\n    pen7?: EnumPenColor;\n    onClick?: () => void;\n    onHide?: () => void;\n}\n\nexport default class Icon extends React.Component<IIconProps, {}> {\n    static isValidIconName(name: string): boolean {\n        return typeof iconsBook[name] !== 'undefined';\n    }\n\n    static getAllIconNames(): string[] {\n        return Object.keys(iconsBook).sort();\n    }\n\n    private refIcon: any;\n    private visible: boolean;\n    private timeoutHandle: number;\n\n    constructor(props: IIconProps) {\n        super(props);\n        this.refIcon = React.createRef();\n        this.visible = false;\n        this.timeoutHandle = 0;\n    }\n\n    triggerVisibleAnimation() {\n        const\n            elemIcon = this.refIcon.current,\n            visible = this.visible;\n        if (this.timeoutHandle) {\n            window.clearTimeout(this.timeoutHandle);\n            this.timeoutHandle = 0;\n        }\n        requestAnimationFrame(() => {\n            if (visible) elemIcon.classList.remove(\"zero\");\n            else {\n                elemIcon.classList.add(\"zero\");\n                const slot = this.props.onHide;\n                if (typeof slot === 'function') {\n                    this.timeoutHandle = window.setTimeout(slot, 300);\n                }\n            }\n        });\n    }\n\n    render() {\n        const\n            p = this.props,\n            visible = castBoolean(p.visible, true),\n            animate = castBoolean(p.animate, false),\n            flipH = castBoolean(p.flipH, false),\n            flipV = castBoolean(p.flipV, false),\n            size = castUnit(p.size, \"28px\"),\n            content = castContent(p.content),\n            rotate = castInteger(p.rotate, 0),\n            onClick = p.onClick,\n            classes = [\"tfw-view-icon\"];\n        const svgContent = createSvgContent(content, p);\n        if (!svgContent) return null;\n\n        if (animate) classes.push(\"animate\");\n        if (visible) classes.push(\"zero\");\n        if (typeof onClick === 'function') classes.push(\"active\");\n\n        let transform = \"\";\n        if (rotate !== 0) {\n            transform += `rotate(${rotate}deg) `;\n        }\n        if (flipH || flipV) {\n            transform += `scale(${flipH ? -1 : 1},${flipV ? -1 : 1})`;\n        }\n        const style: React.CSSProperties = { width: size, height: size };\n        if (transform.length > 0) style.transform = transform;\n\n        requestAnimationFrame(() => this.triggerVisibleAnimation());\n        this.visible = visible;\n\n        return (\n            <svg className={classes.join(\" \")}\n                ref={this.refIcon}\n                viewBox=\"-65 -65 130 130\"\n                preserveAspectRatio=\"xMidYMid\"\n                width={size}\n                height={size}\n                onClick={onClick}\n                style={style}>\n                {svgContent}\n                < g strokeWidth=\"6\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" >\n                    {createSvgContent(content, p)}\n                </g>\n            </svg>\n        );\n    }\n}\n\nfunction createSvgContent(def: TIconDefinition, props: IIconProps, key: string = \"\"): any {\n    const\n        elementName = def[0],\n        { attributes, children } = parseDef(def);\n\n    if (typeof elementName === 'undefined') return <g></g>;\n\n    const attribs: React.Attributes = manageColors(attributes);\n    if (key.length > 0) attributes.key = key;\n\n    return React.createElement(\n        elementName,\n        attribs,\n        children.map((child, index) => createSvgContent(child, props, `${index}`))\n    ) as React.ReactSVGElement;\n}\n\nconst CLASSES = [\"0\", \"1\", \"P\", \"PL\", \"PD\", \"S\", \"SL\", \"SD\"];\n\n/**\n * If the value of the attribute \"fill\" is an element of CLASSES,\n * it will be removed and replace with a class.\n * Same thing for the attibute \"stroke\".\n *\n * @example\n * manageColors({ fill: \"1\" }) === { className: \"thn-svg-fill-1\" }\n *\n * @param   attribs [description]\n * @param   props   [description]\n * @returns         [description]\n */\nfunction manageColors(attribs: { [key: string]: any }) {\n    // @TODO For special forms of \"fill\" and \"stroke\", add classes.\n    const classes = (attribs.className || \"\").split(\" \");\n\n    [\"fill\", \"stroke\"].forEach(attribName => {\n        const attribValue = attribs[attribName];\n        if (typeof attribValue === 'undefined') return;\n        const key = `${attribValue}`.toUpperCase();\n        if (CLASSES.indexOf(key) === -1) return;\n        delete attribs[attribName];\n        classes.push(`thm-svg-${attribName}${key}`);\n    });\n\n    attribs.className = classes.join(\" \").trim();\n    return attribs;\n}\n\nfunction parseDef([name, arg1, arg2]: TIconDefinition) {\n    let attributes: undefined | {},\n        children: undefined | any[];\n\n    if (Array.isArray(arg1)) children = arg1;\n    else if (typeof arg1 !== 'undefined') attributes = arg1;\n    if (Array.isArray(arg2)) children = arg2;\n    else if (typeof arg2 !== 'undefined') attributes = arg2;\n\n    if (typeof attributes === 'undefined') attributes = {};\n    if (typeof children === 'undefined') children = [];\n\n    return { attributes, children };\n}\n\nfunction castContent(content: string | TIconDefinition = \"ok\"): TIconDefinition {\n    if (Array.isArray(content)) return content;\n    return iconsBook[content] || [];\n}\n"]},"metadata":{},"sourceType":"module"}