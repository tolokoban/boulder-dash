{"ast":null,"code":"import _classCallCheck from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar GamepadListener =\n/*#__PURE__*/\nfunction () {\n  function GamepadListener() {\n    var _this = this;\n\n    _classCallCheck(this, GamepadListener);\n\n    this._isConnected = false;\n    this._gamepad = void 0;\n    console.log(\"Gamepad...\");\n    window.addEventListener(\"gamepadconnected\", function (e) {\n      return _this.handleConnected(e);\n    });\n    window.addEventListener(\"gamepaddisconnected\", function (e) {\n      return _this.handleDisconnected(e);\n    });\n  }\n\n  _createClass(GamepadListener, [{\n    key: \"handleConnected\",\n    value: function handleConnected(evt) {\n      var _this2 = this;\n\n      console.log(\"[connect] evt=\", evt);\n      this._isConnected = true;\n      this._gamepad = navigator.getGamepads()[0];\n      setInterval(function () {\n        var welcome = document.getElementById(\"welcome\");\n        welcome.textContent = JSON.stringify(_this2._gamepad.axes);\n      }, 1000);\n    }\n  }, {\n    key: \"handleDisconnected\",\n    value: function handleDisconnected(evt) {\n      console.log(\"[disconnect] evt=\", evt);\n      this._isConnected = true;\n      delete this._gamepad;\n    }\n  }, {\n    key: \"read\",\n    value: function read() {\n      var gp = this._gamepad;\n      if (!gp) return -1;\n      var axes = gp.axes;\n      var index = 0;\n      var value = Math.abs(axes[0]);\n\n      for (var k = 1; k < axes.length; k++) {\n        var v = Math.abs(axes[k]);\n\n        if (v > value) {\n          index = k;\n          value = v;\n        }\n      }\n\n      if (value < .4) return -1;\n      value = axes[index];\n\n      if (value > 0) {\n        // Right or down.\n        if (index % 2 === 0) return this.RIGHT;\n        return this.DOWN;\n      } else {\n        // Left or up.\n        if (index % 2 === 0) return this.LEFT;\n        return this.UP;\n      }\n    }\n  }, {\n    key: \"isConnected\",\n    get: function get() {\n      return this._isConnected;\n    }\n  }]);\n\n  return GamepadListener;\n}();\n\nGamepadListener.UP = 0;\nGamepadListener.RIGHT = 1;\nGamepadListener.DOWN = 2;\nGamepadListener.LEFT = 3;\nexport default new GamepadListener();","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/lib/gamepad.ts"],"names":["GamepadListener","_isConnected","_gamepad","console","log","window","addEventListener","e","handleConnected","handleDisconnected","evt","navigator","getGamepads","setInterval","welcome","document","getElementById","textContent","JSON","stringify","axes","gp","index","value","Math","abs","k","length","v","RIGHT","DOWN","LEFT","UP"],"mappings":";;;IAAMA,e;;;AASF,6BAAc;AAAA;;AAAA;;AAAA,SARNC,YAQM,GARkB,KAQlB;AAAA,SAPNC,QAOM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACC,eAAL,CAAqBD,CAArB,CAAJ;AAAA,KAA7C;AACAF,IAAAA,MAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,UAAAC,CAAC;AAAA,aAAI,KAAI,CAACE,kBAAL,CAAwBF,CAAxB,CAAJ;AAAA,KAAhD;AACH;;;;oCAEuBG,G,EAAK;AAAA;;AACzBP,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BM,GAA9B;AACA,WAAKT,YAAL,GAAoB,IAApB;AACA,WAAKC,QAAL,GAAgBS,SAAS,CAACC,WAAV,GAAwB,CAAxB,CAAhB;AAEAC,MAAAA,WAAW,CAAC,YAAM;AACd,YAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACAF,QAAAA,OAAO,CAACG,WAAR,GAAsBC,IAAI,CAACC,SAAL,CAAe,MAAI,CAACjB,QAAL,CAAckB,IAA7B,CAAtB;AACH,OAHU,EAGR,IAHQ,CAAX;AAIH;;;uCAE0BV,G,EAAK;AAC5BP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCM,GAAjC;AACA,WAAKT,YAAL,GAAoB,IAApB;AACA,aAAO,KAAKC,QAAZ;AACH;;;2BAI0B;AACvB,UAAMmB,EAAE,GAAG,KAAKnB,QAAhB;AACA,UAAI,CAACmB,EAAL,EAAS,OAAO,CAAC,CAAR;AACT,UAAMD,IAAI,GAAGC,EAAE,CAACD,IAAhB;AACA,UAAIE,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASL,IAAI,CAAC,CAAD,CAAb,CAAZ;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAME,CAAC,GAAGJ,IAAI,CAACC,GAAL,CAASL,IAAI,CAACM,CAAD,CAAb,CAAV;;AACA,YAAIE,CAAC,GAAGL,KAAR,EAAe;AACXD,UAAAA,KAAK,GAAGI,CAAR;AACAH,UAAAA,KAAK,GAAGK,CAAR;AACH;AACJ;;AACD,UAAIL,KAAK,GAAG,EAAZ,EAAgB,OAAO,CAAC,CAAR;AAChBA,MAAAA,KAAK,GAAGH,IAAI,CAACE,KAAD,CAAZ;;AACA,UAAIC,KAAK,GAAG,CAAZ,EAAe;AACX;AACA,YAAID,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB,OAAO,KAAKO,KAAZ;AACrB,eAAO,KAAKC,IAAZ;AACH,OAJD,MAIO;AACH;AACA,YAAIR,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB,OAAO,KAAKS,IAAZ;AACrB,eAAO,KAAKC,EAAZ;AACH;AACJ;;;wBA1BiB;AAAE,aAAO,KAAK/B,YAAZ;AAA2B;;;;;;AAhC7CD,e,CAIKgC,E,GAAa,C;AAJlBhC,e,CAKK6B,K,GAAgB,C;AALrB7B,e,CAMK8B,I,GAAe,C;AANpB9B,e,CAOK+B,I,GAAe,C;AAuD1B,eAAe,IAAI/B,eAAJ,EAAf","sourcesContent":["class GamepadListener {\n    private _isConnected: boolean = false;\n    private _gamepad;\n\n    static UP: number = 0;\n    static RIGHT: number = 1;\n    static DOWN: number = 2;\n    static LEFT: number = 3;\n\n    constructor() {\n        console.log(\"Gamepad...\");\n        window.addEventListener(\"gamepadconnected\", e => this.handleConnected(e));\n        window.addEventListener(\"gamepaddisconnected\", e => this.handleDisconnected(e));\n    }\n\n    private handleConnected(evt) {\n        console.log(\"[connect] evt=\", evt);\n        this._isConnected = true;\n        this._gamepad = navigator.getGamepads()[0];\n\n        setInterval(() => {\n            const welcome = document.getElementById(\"welcome\");\n            welcome.textContent = JSON.stringify(this._gamepad.axes);\n        }, 1000);\n    }\n\n    private handleDisconnected(evt) {\n        console.log(\"[disconnect] evt=\", evt);\n        this._isConnected = true;\n        delete this._gamepad;\n    }\n\n    get isConnected() { return this._isConnected; }\n\n    read(): -1 | 0 | 1 | 2 | 3 {\n        const gp = this._gamepad;\n        if (!gp) return -1;\n        const axes = gp.axes;\n        let index = 0;\n        let value = Math.abs(axes[0]);\n        for (let k = 1; k < axes.length; k++) {\n            const v = Math.abs(axes[k]);\n            if (v > value) {\n                index = k;\n                value = v;\n            }\n        }\n        if (value < .4) return -1;\n        value = axes[index];\n        if (value > 0) {\n            // Right or down.\n            if (index % 2 === 0) return this.RIGHT;\n            return this.DOWN;\n        } else {\n            // Left or up.\n            if (index % 2 === 0) return this.LEFT;\n            return this.UP;\n        }\n    }\n}\n\n\nexport default new GamepadListener();\n"]},"metadata":{},"sourceType":"module"}