{"ast":null,"code":"import _classCallCheck from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tolokoban/Code/github/boulder-dash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar CAPACITY = 3;\n/**\n * Helper to manage a pointer move.\n * It gives you the location, the speed and the acceleration of your pointer.\n *\n * @type {[type]}\n */\n\nvar Moves =\n/*#__PURE__*/\nfunction () {\n  function Moves() {\n    var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, Moves);\n\n    this._x0 = void 0;\n    this._y0 = void 0;\n    this._time0 = void 0;\n    this._x = new Array(CAPACITY);\n    this._y = new Array(CAPACITY);\n    this._time = new Array(CAPACITY);\n    this._cursor = 0;\n    this.init(x, y);\n  }\n\n  _createClass(Moves, [{\n    key: \"init\",\n    value: function init(x, y) {\n      this._time0 = this.now;\n      this._x0 = x;\n      this._y0 = y;\n      this._x = this._x.fill(this._x0, 0, CAPACITY);\n      this._y = this._y.fill(this._y0, 0, CAPACITY);\n      this._time = this._time.fill(this._time0, 0, CAPACITY);\n    }\n  }, {\n    key: \"_index\",\n    value: function _index(shift) {\n      return (this._cursor + shift) % CAPACITY;\n    }\n  }, {\n    key: \"add\",\n    value: function add(x, y) {\n      var idx = (this._cursor + CAPACITY - 1) % CAPACITY;\n      this._time[idx] = this.now;\n      this._x[idx] = x;\n      this._y[idx] = y;\n      this._cursor = idx;\n    }\n  }, {\n    key: \"now\",\n    get: function get() {\n      return Date.now();\n    }\n  }, {\n    key: \"elapsedTime\",\n    get: function get() {\n      return this.now - this._time0;\n    }\n  }, {\n    key: \"x\",\n    get: function get() {\n      return this._x[this._cursor];\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this._y[this._cursor];\n    }\n  }, {\n    key: \"startX\",\n    get: function get() {\n      return this._x0;\n    }\n  }, {\n    key: \"startY\",\n    get: function get() {\n      return this._y0;\n    }\n  }, {\n    key: \"speedX\",\n    get: function get() {\n      var idx0 = this._cursor;\n\n      var idx1 = this._index(1);\n\n      var time = this._time[idx0] - this._time[idx1];\n      if (time <= 0) return 0;\n      return (this._x[idx0] - this._x[idx1]) / time;\n    }\n  }, {\n    key: \"speedY\",\n    get: function get() {\n      var idx0 = this._cursor;\n\n      var idx1 = this._index(1);\n\n      var time = this._time[idx0] - this._time[idx1];\n      if (time <= 0) return 0;\n      return (this._y[idx0] - this._y[idx1]) / time;\n    }\n  }, {\n    key: \"accelX\",\n    get: function get() {\n      var idx0 = this._index(0);\n\n      var time0 = this._time[idx0];\n\n      var idx1 = this._index(1);\n\n      var time1 = this._time[idx1];\n      var time01 = time0 - time1;\n      if (time01 <= 0) return 0;\n\n      var idx2 = this._index(2);\n\n      var time2 = this._time[idx2];\n      var time12 = time1 - time2;\n      if (time12 <= 0) return 0;\n      var x0 = this._x[idx0];\n      var x1 = this._x[idx1];\n      var x2 = this._x[idx2];\n      var speed01 = (x0 - x1) / time01;\n      var speed12 = (x1 - x2) / time12;\n      return (speed01 - speed12) / time01;\n    }\n  }, {\n    key: \"accelY\",\n    get: function get() {\n      var idx0 = this._index(0);\n\n      var time0 = this._time[idx0];\n\n      var idx1 = this._index(1);\n\n      var time1 = this._time[idx1];\n      var time01 = time0 - time1;\n      if (time01 <= 0) return 0;\n\n      var idx2 = this._index(2);\n\n      var time2 = this._time[idx2];\n      var time12 = time1 - time2;\n      if (time12 <= 0) return 0;\n      var y0 = this._y[idx0];\n      var y1 = this._y[idx1];\n      var y2 = this._y[idx2];\n      var speed01 = (y0 - y1) / time01;\n      var speed12 = (y1 - y2) / time12;\n      return (speed01 - speed12) / time01;\n    }\n  }]);\n\n  return Moves;\n}();\n\nexport { Moves as default };","map":{"version":3,"sources":["/home/tolokoban/Code/github/boulder-dash/src/tfw/gesture/moves.ts"],"names":["CAPACITY","Moves","x","y","_x0","_y0","_time0","_x","Array","_y","_time","_cursor","init","now","fill","shift","idx","Date","idx0","idx1","_index","time","time0","time1","time01","idx2","time2","time12","x0","x1","x2","speed01","speed12","y0","y1","y2"],"mappings":"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","sourcesContent":["const CAPACITY = 3;\n\n/**\n * Helper to manage a pointer move.\n * It gives you the location, the speed and the acceleration of your pointer.\n *\n * @type {[type]}\n */\nexport default class Moves {\n    private _x0: number;\n    private _y0: number;\n    private _time0: number;\n    private _x: number[] = new Array(CAPACITY);\n    private _y: number[] = new Array(CAPACITY);\n    private _time: number[] = new Array(CAPACITY);\n    private _cursor: number = 0;\n\n    constructor(x: number = 0, y: number = 0) {\n        this.init(x, y);\n    }\n\n    init(x: number, y: number) {\n        this._time0 = this.now;\n        this._x0 = x;\n        this._y0 = y;\n        this._x = this._x.fill(this._x0, 0, CAPACITY);\n        this._y = this._y.fill(this._y0, 0, CAPACITY);\n        this._time = this._time.fill(this._time0, 0, CAPACITY);\n    }\n\n    _index(shift: number) {\n        return (this._cursor + shift) % CAPACITY;\n    }\n\n    get now() { return Date.now(); }\n\n    add(x: number, y: number) {\n        const idx = (this._cursor + CAPACITY - 1) % CAPACITY;\n        this._time[idx] = this.now;\n        this._x[idx] = x;\n        this._y[idx] = y;\n        this._cursor = idx;\n    }\n\n    get elapsedTime() { return this.now - this._time0; }\n\n    get x() { return this._x[this._cursor]; }\n    get y() { return this._y[this._cursor]; }\n\n    get startX() { return this._x0; }\n    get startY() { return this._y0; }\n\n    get speedX() {\n        const idx0 = this._cursor;\n        const idx1 = this._index(1);\n        const time = this._time[idx0] - this._time[idx1];\n        if (time <= 0) return 0;\n        return (this._x[idx0] - this._x[idx1]) / time;\n    }\n\n    get speedY() {\n        const idx0 = this._cursor;\n        const idx1 = this._index(1);\n        const time = this._time[idx0] - this._time[idx1];\n        if (time <= 0) return 0;\n        return (this._y[idx0] - this._y[idx1]) / time;\n    }\n\n    get accelX() {\n        const idx0 = this._index(0);\n        const time0 = this._time[idx0];\n\n        const idx1 = this._index(1);\n        const time1 = this._time[idx1];\n\n        const time01 = time0 - time1;\n\n        if (time01 <= 0) return 0;\n\n        const idx2 = this._index(2);\n        const time2 = this._time[idx2];\n\n        const time12 = time1 - time2;\n\n        if (time12 <= 0) return 0;\n\n        const x0 = this._x[idx0];\n        const x1 = this._x[idx1];\n        const x2 = this._x[idx2];\n\n        const speed01 = (x0 - x1) / time01;\n        const speed12 = (x1 - x2) / time12;\n\n        return (speed01 - speed12) / time01;\n    }\n\n    get accelY() {\n        const idx0 = this._index(0);\n        const time0 = this._time[idx0];\n\n        const idx1 = this._index(1);\n        const time1 = this._time[idx1];\n\n        const time01 = time0 - time1;\n\n        if (time01 <= 0) return 0;\n\n        const idx2 = this._index(2);\n        const time2 = this._time[idx2];\n\n        const time12 = time1 - time2;\n\n        if (time12 <= 0) return 0;\n\n        const y0 = this._y[idx0];\n        const y1 = this._y[idx1];\n        const y2 = this._y[idx2];\n\n        const speed01 = (y0 - y1) / time01;\n        const speed12 = (y1 - y2) / time12;\n\n        return (speed01 - speed12) / time01;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}